# -*- mode: yaml -*-
# vim:ts=2:sw=2:ai:si:syntax=yaml
#
# Travis CI configuration
# https://docs.travis-ci.com/
---
# Run tests against pull requests and main branches only
if: |
  type = pull_request OR \
  branch IN (master, develop)

language: generic

matrix:
  include:
    - name: "Ubuntu 16.04 LTS with Ansible 2.8"
      os: linux
      dist: xenial
      env: MACHINE_ANSIBLE_VERSION=2.8
    - name: "Ubuntu 18.04 LTS with Ansible 2.8"
      os: linux
      dist: bionic
      env: MACHINE_ANSIBLE_VERSION=2.8
    - name: "Ubuntu 16.04 LTS with Ansible 2.9"
      os: linux
      dist: xenial
      env: MACHINE_ANSIBLE_VERSION=2.9
    - name: "Ubuntu 18.04 LTS with Ansible 2.9"
      os: linux
      dist: bionic
      env: MACHINE_ANSIBLE_VERSION=2.9

before_install:
  # Cleanup existing NVM installation
  - unset NVM_CD_FLAGS
  - unset NVM_DIR
  - unset NVM_BIN
  - rm -rf /home/travis/.nvm
  - rm -rf /etc/profile.d/travis-nvm.sh

  # Remove Go versions installed with Gimme
  - >
    if [[ -d "/home/travis/.gimme" ]]; then
      rm -rf /home/travis/.gimme
    fi

  # Unset GOROOT and GIMME_ENV variables
  - unset GOROOT
  - unset GIMME_ENV

  # Remove Gimme installed Go version from the PATH
  - export PATH=$(echo "${PATH}" | sed 's~/home/travis/.gimme/versions/\([^/]*\)/bin:~~')

script:
  # Use Travis test configuration
  - cp machine.travis.yaml machine.yaml

  # Install roles
  - ./setup -n || travis_terminate 1

  # Check syntax of the Ansible playbooks
  - ./setup -s || travis_terminate 1

  # Run playbooks without installing roles
  - ./setup -q || travis_terminate 1

  # Avoid updating apt cache during idempotence tests
  - >
    echo "update_apt_cache: false" >> machine.yaml

  # Run idempotence tests
  - >
    ./setup -q \
      | grep -q 'changed=0.*failed=0' \
      && (echo 'Idempotence test: pass' && exit 0) \
      || (echo 'Idempotence test: fail' && exit 1)
